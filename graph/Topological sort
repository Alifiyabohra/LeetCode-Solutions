link--> https://www.geeksforgeeks.org/problems/topological-sort/1
class Solution {
  public:
    void dfs(int node,int V, vector<int>& visited, stack<int>&s, vector<vector<int>>& adj){
        visited[node]=1;
        
        for(int it:adj[node]){
            if(!visited[it]){
                dfs(it,V,visited,s,adj);
            }
        }
        s.push(node);
    }
    vector<int> topoSort(int V, vector<vector<int>>& edges) {
        // code here
        vector<vector<int>>adj(V);
        vector<int>visited(V,0);
        int n=edges.size();
        for(auto edge:edges){
            int u=edge[0];
            int v=edge[1];
            
            adj[u].push_back(v);
        }
        stack<int>s;
        for(int i=0;i<V;i++){
            if(!visited[i]){
                dfs(i,V,visited,s,adj);
            }
        }
        
        vector<int>ans;
        for(int i=0;i<V;i++){
            int ele=s.top();
            s.pop();
            ans.push_back(ele);
        }
        return ans;
    }
};
