class Solution {
public:
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        int V=numCourses;
        vector<vector<int>>adj(V);
        for(auto edge:prerequisites){
            int u=edge[0];
            int v=edge[1];

            adj[v].push_back(u);
        }

        vector<int>indegree(V,0);
        for(int i=0;i<V;i++){
            for(int it:adj[i]){
                indegree[it]++;
            }
        }
        queue<int>q;
        for(int i=0;i<V;i++){
            if(indegree[i]==0){
                q.push(i);
            }
        }

        int count=0;
        while(!q.empty()){
            int node=q.front();
            q.pop();
            count++;

            for(int it:adj[node]){
                indegree[it]--;
                if(indegree[it]==0){
                    q.push(it);
                }
            }
        }

        if(count==V){
            return true;
        }
        return false;
    }
};
