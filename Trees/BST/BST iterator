link--> https://takeuforward.org/plus/dsa/problems/bst-iterator
**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int data;
 *     TreeNode *left;
 *     TreeNode *right;
 *      TreeNode(int val) : data(val) , left(nullptr) , right(nullptr) {}
 * };
 **/

class BSTIterator{
    private: stack<TreeNode*> myStack;
	public:
		BSTIterator(TreeNode* root){
			pushAll(root);
		}
		
		bool hasNext(){
			return !myStack.empty();
		}
		
		int next(){
            TreeNode* top=myStack.top();
            myStack.pop();
            pushAll(top->right);
            return top->data;
		}
        void pushAll(TreeNode* root){
            while(root){
                myStack.push(root);
                root=root->left;
            }
        }
};

/**
 * Your BSTIterator object will be instantiated and called as such:
 * BSTIterator* obj = new BSTIterator(root);
 * int param_1 = obj->next();
 * bool param_2 = obj->hasNext();
 */
